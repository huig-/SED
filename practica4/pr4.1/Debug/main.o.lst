   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  21              	.Ltext0:
  22              		.file 1 "../main.c"
 1889              		.align	2
 1890              		.global	Main
 1892              	Main:
 1893              	.LFB0:
   1:../main.c     **** /*--- ficheros de cabecera ---*/
   2:../main.c     **** #include "44blib.h"
   3:../main.c     **** #include "44b.h"
   4:../main.c     **** #include "uart.h"
   5:../main.c     **** 
   6:../main.c     **** /*--- declaracion de funciones ---*/
   7:../main.c     **** int Main(void);
   8:../main.c     **** extern void leds_off();
   9:../main.c     **** extern void led1_on();
  10:../main.c     **** extern void led1_off();
  11:../main.c     **** extern void led2_on();
  12:../main.c     **** extern void led2_off();
  13:../main.c     **** extern void Eint4567_init();
  14:../main.c     **** extern void D8Led_symbol(int value);
  15:../main.c     **** extern void keyboard_init();
  16:../main.c     **** /*--- variables globales ---*/
  17:../main.c     **** char str[256];
  18:../main.c     **** 
  19:../main.c     **** /*--- codigo de la funcion ---*/
  20:../main.c     **** int Main(void){
 1894              		.loc 1 20 0
 1895              		.cfi_startproc
 1896              		@ Function supports interworking.
 1897              		@ args = 0, pretend = 0, frame = 8
 1898              		@ frame_needed = 1, uses_anonymous_args = 0
 1899 0000 0DC0A0E1 		mov	ip, sp
 1900              	.LCFI0:
 1901              		.cfi_def_cfa_register 12
 1902 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1903 0008 04B04CE2 		sub	fp, ip, #4
 1904              		.cfi_offset 14, -8
 1905              		.cfi_offset 13, -12
 1906              		.cfi_offset 11, -16
 1907              	.LCFI1:
 1908              		.cfi_def_cfa 11, 4
 1909 000c 08D04DE2 		sub	sp, sp, #8
  21:../main.c     **** 
  22:../main.c     **** 	char *pt_str = str;
 1910              		.loc 1 22 0
 1911 0010 80309FE5 		ldr	r3, .L6
 1912 0014 10300BE5 		str	r3, [fp, #-16]
  23:../main.c     **** 	leds_off();
 1913              		.loc 1 23 0
 1914 0018 FEFFFFEB 		bl	leds_off
  24:../main.c     **** 	sys_init(); // inicializacion de la placa, interrupciones, puertos
 1915              		.loc 1 24 0
 1916 001c FEFFFFEB 		bl	sys_init
  25:../main.c     **** 	Eint4567_init();
 1917              		.loc 1 25 0
 1918 0020 FEFFFFEB 		bl	Eint4567_init
  26:../main.c     **** 	keyboard_init();
 1919              		.loc 1 26 0
 1920 0024 FEFFFFEB 		bl	keyboard_init
  27:../main.c     **** 	Uart_Init(115200); // inicializacion de la Uart
 1921              		.loc 1 27 0
 1922 0028 6C009FE5 		ldr	r0, .L6+4
 1923 002c FEFFFFEB 		bl	Uart_Init
  28:../main.c     **** 	Uart_Config(); // configuración de interrupciones y buffers
 1924              		.loc 1 28 0
 1925 0030 FEFFFFEB 		bl	Uart_Config
 1926              	.L5:
  29:../main.c     **** 
  30:../main.c     **** 	while(1){
  31:../main.c     **** 		*pt_str = Uart_Getch1(); // leer caracter
 1927              		.loc 1 31 0
 1928 0034 FEFFFFEB 		bl	Uart_Getch1
 1929 0038 0030A0E1 		mov	r3, r0
 1930 003c 0320A0E1 		mov	r2, r3
 1931 0040 10301BE5 		ldr	r3, [fp, #-16]
 1932 0044 0020C3E5 		strb	r2, [r3, #0]
  32:../main.c     **** 		if(pt_str[0] == 'I'){
 1933              		.loc 1 32 0
 1934 0048 10301BE5 		ldr	r3, [fp, #-16]
 1935 004c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1936 0050 490053E3 		cmp	r3, #73
 1937 0054 0200001A 		bne	.L2
  33:../main.c     **** 			led1_on();
 1938              		.loc 1 33 0
 1939 0058 FEFFFFEB 		bl	led1_on
  34:../main.c     **** 			led2_off();
 1940              		.loc 1 34 0
 1941 005c FEFFFFEB 		bl	led2_off
  35:../main.c     **** 		} else if (pt_str[0] == 'D'){
  36:../main.c     **** 			led2_on();
  37:../main.c     **** 			led1_off();
  38:../main.c     **** 		}
  39:../main.c     **** 		else  {
  40:../main.c     **** 			D8Led_symbol(pt_str[0]-'0');
  41:../main.c     **** 		}
  42:../main.c     **** 	}
 1942              		.loc 1 42 0
 1943 0060 F3FFFFEA 		b	.L5
 1944              	.L2:
  35:../main.c     **** 		} else if (pt_str[0] == 'D'){
 1945              		.loc 1 35 0
 1946 0064 10301BE5 		ldr	r3, [fp, #-16]
 1947 0068 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1948 006c 440053E3 		cmp	r3, #68
 1949 0070 0200001A 		bne	.L4
  36:../main.c     **** 			led2_on();
 1950              		.loc 1 36 0
 1951 0074 FEFFFFEB 		bl	led2_on
  37:../main.c     **** 			led1_off();
 1952              		.loc 1 37 0
 1953 0078 FEFFFFEB 		bl	led1_off
 1954              		.loc 1 42 0
 1955 007c ECFFFFEA 		b	.L5
 1956              	.L4:
  40:../main.c     **** 			D8Led_symbol(pt_str[0]-'0');
 1957              		.loc 1 40 0
 1958 0080 10301BE5 		ldr	r3, [fp, #-16]
 1959 0084 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1960 0088 303043E2 		sub	r3, r3, #48
 1961 008c 0300A0E1 		mov	r0, r3
 1962 0090 FEFFFFEB 		bl	D8Led_symbol
 1963              		.loc 1 42 0
 1964 0094 E6FFFFEA 		b	.L5
 1965              	.L7:
 1966              		.align	2
 1967              	.L6:
 1968 0098 00000000 		.word	str
 1969 009c 00C20100 		.word	115200
 1970              		.cfi_endproc
 1971              	.LFE0:
 1973              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *COM*:00000100 str
C:\Users\USUARI~1\AppData\Local\Temp\ccS6lBib.s:1889   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccS6lBib.s:1892   .text:00000000 Main
C:\Users\USUARI~1\AppData\Local\Temp\ccS6lBib.s:1968   .text:00000098 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
leds_off
sys_init
Eint4567_init
keyboard_init
Uart_Init
Uart_Config
Uart_Getch1
led1_on
led2_off
led2_on
led1_off
D8Led_symbol
